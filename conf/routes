# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# An example controller showing a sample home page
GET     /                           controllers.HomeController.index
# An example controller showing how to use dependency injection
GET     /count                      controllers.CountController.count
# An example controller showing how to write asynchronous code
GET     /message                    controllers.AsyncController.message

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)

## Manipulations around todo-lists
# TodoList
POST    /api/todo-lists             controllers.api.TodoListsController.create
# TodoList :: Seq[TodoItem] :: Seq[Tag]
GET     /api/todo-lists/:todoListId controllers.api.TodoListsController.read(todoListId: String)

# Manipulations around tags
# Tag
POST    /api/todo-lists/:todoListId/tags controllers.api.TagController.create(todoListId: String)
# Unit
#DELETE  /api/todo-lists/:todoListId/tags/:tagId

# Manipulations around todo-items
# TodoItem
POST    /api/todo-lists/:todoListId/todo-items controllers.api.TodoItemsController.create(todoListId: String)
# Seq[TodoItem :: Seq[Tag]]
GET     /api/todo-lists/:todoListId/todo-items controllers.api.TodoItemsController.getList(todoListId: String)
# Unit
#DELETE  /api/todo-lists/:todoListId/todo-items/:todoItemId

# Manipulations around tags on todo-items
# TodoItem
#POST    /api/todo-lists/:todoListId/todo-items/:todoItemId/tags
# TodoItem
#DELETE  /api/todo-lists/:todoListId/todo-items/:todoItemId/tags/:tagId

# Manipulations around replies
# Reply
#POST    /api/todo-lists/:todoListId/todo-items/:todoItemId/tags
# Seq[Reply]
#GET     /api/todo-lists/:todoListId/todo-items/:todoItemId/tags

# TODO define fallback endpoint(404) for api dir